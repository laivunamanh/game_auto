import { message } from "antd";
import React, { useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";

interface Game {
  game_id: number;
  name: string;
  price: number;
  discount: number;
  final_price: number;
  quantity: number;
}

interface CheckoutSummaryVnpayProps {
  games: Game[]; // Nh·∫≠n danh s√°ch game ƒë√£ ch·ªçn
}

const CheckoutSummaryVnpay: React.FC<CheckoutSummaryVnpayProps> = ({ games }) => {
    const location = useLocation();
  const navigate = useNavigate();
  const selectedItems = location.state?.selectedItems || []; 
  console.log('hihi',selectedItems);
  const totalQuantity = games.reduce((acc, game) => acc + game.quantity, 0);
  const totalPrice = games.reduce(
    (acc, game) => acc + game.final_price * game.quantity,
    0
  );
  console.log('tong tien',totalPrice)

  const user = JSON.parse(localStorage.getItem("user") || "{}");

  const handleConfirmPayment = async () => {
    if (totalQuantity < 1) {
      message.warning("B·∫°n ch∆∞a ch·ªçn s·∫£n ph·∫©m n√†o ƒë·ªÉ thanh to√°n!");
      return;
    }
  
    // D·ªØ li·ªáu g·ª≠i l√™n backend
    const orderData = {
      user_id: user.user_id, // ID ng∆∞·ªùi d√πng
      games: games.map((game) => ({
        game_id: game.game_id,
        name: game.name,
        quantity: game.quantity,
        price: game.price,
        discount: game.discount,
        final_price: game.final_price,
      })),
      total_price: totalPrice, // T·ªïng ti·ªÅn
    };
    console.log('D·ªØ li·ªáu g·ª≠i:', orderData);
  
    try {
      const response = await fetch("http://localhost:8080/orders", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(orderData),
      });
  
      if (response.ok) {
        const data = await response.json();
        console.log("ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c t·∫°o:", data);
  
        // Sau khi t·∫°o ƒë∆°n h√†ng th√†nh c√¥ng, ƒëi·ªÅu h∆∞·ªõng ƒë·∫øn trang /vnpayment v√† truy·ªÅn d·ªØ li·ªáu c·∫ßn thi·∫øt
        // navigate("/vnpayment", { state: { selectedItems, order_id: data.data.order_id } });
        window.location = ('http://localhost:8080/' + data.data.urlPay) as any;
      } else {
        message.error("ƒê∆°n h√†ng t·∫°o th·∫•t b·∫°i!");
      }
    } catch (error) {
      console.error("L·ªói khi t·∫°o ƒë∆°n h√†ng:", error);
      message.error("ƒê√£ c√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i!");
    }
  };
  

  const handleBackToCart = () => {
    navigate("/cart");
  };

  return (
    <div className="bg-white p-6 rounded-lg shadow-lg">
      <h3 className="text-2xl font-semibold mb-6 text-gray-800">Thanh to√°n</h3>
      <div className="space-y-4">
        <div className="flex justify-between text-sm text-gray-600">
          <span>T·ªïng gi√° tr·ªã s·∫£n ph·∫©m</span>
          <span className="font-medium text-gray-900">
            {totalPrice.toLocaleString()}ƒë
          </span>
        </div>
        <div className="flex justify-between text-sm text-gray-600">
          <span>S·ªë d∆∞ hi·ªán t·∫°i</span>
          <span className="font-medium text-gray-900">
            {user.money.toLocaleString()}ƒë
          </span>
        </div>
      </div>
      <button
        className="w-full bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 transition duration-200 mt-6 flex items-center justify-center"
        onClick={handleConfirmPayment}
      >
        <span className="mr-2">üí≥</span> X√°c nh·∫≠n thanh to√°n
      </button>
      <button
        className="mt-4 w-full text-blue-600 text-sm hover:text-blue-800"
        onClick={handleBackToCart}
      >
        üîô Tr·ªü v·ªÅ gi·ªè h√†ng
      </button>
    </div>
  );
};

export default CheckoutSummaryVnpay;
